version: '3.8'

services:
  # Backend API
  backend:
    build:
      context: ./my-nextjs-back
      dockerfile: Dockerfile
    container_name: dimfront-backend
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=production
      - PORT=5000
      - CORS_ORIGIN=http://localhost:3000
    volumes:
      - ./my-nextjs-back/logs:/app/logs
    restart: unless-stopped
    networks:
      - dimfront-network
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:5000/', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend Next.js
  frontend:
    build:
      context: ./my-nextjs-app
      dockerfile: Dockerfile
    container_name: dimfront-frontend
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=http://localhost:5000
    depends_on:
      backend:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - dimfront-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Nginx Reverse Proxy (optionnel)
  nginx:
    image: nginx:alpine
    container_name: dimfront-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - backend
    restart: unless-stopped
    networks:
      - dimfront-network

networks:
  dimfront-network:
    driver: bridge

volumes:
  logs: 